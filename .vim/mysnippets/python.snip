snippet jinjahdr
    #!/usr/bin/env python
    import sys, os, csv, jinja2
    import glob, subprocess, re


    # Change the default delimiters used by Jinja such that it won't pick up
    # brackets attached to LaTeX macros.
    report_renderer = jinja2.Environment(
      block_start_string = '%{',
      block_end_string = '%}',
      variable_start_string = '%{{',
      variable_end_string = '%}}',
      loader = jinja2.FileSystemLoader(os.path.abspath('.'))
    )

    template = report_renderer.get_template($1)



snippet npimp
    import numpy as np
    from numpy import exp, sqrt, sin, cos, tan
    from numpy import reshape
    from numpy.linalg import eig, svd


snippet os
    import os, re, sys, shutil
    import subprocess
    from os import path
    from re import search, sub, compile as rcompile
    from glob import glob



snippet aos
    import madrespek as md
    import iris
    from iris import plot as iplt, quickplot as qplt, load_cube, Constraint as iC
    import matplotlib.pyplot as plt


snippet tlim
    tlim = lambda t : ${1:0} < t < ${2:100}

snippet main
    if __name__ == '__main__':
        
snippet .
    self.

snippet wrapper

    def __getattr__(self, attr):
        # see if this object has attr
        # NOTE do not use hasattr, it goes into
        # infinite recurrsion
        if attr in self.__dict__:
            # this object has it
            return getattr(self, attr)
        # proxy to the wrapped object
        return getattr(self._arr, attr)

    def __getitem__(self, *args,**kw):
        return self._arr.__getitem__(*args, **kw)

